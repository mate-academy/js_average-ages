#!/usr/bin/env node

"use strict";var t=require("commander"),s=require("child_process"),e=require("path"),i=require("fs-extra"),o=require("tree-kill"),r=require("get-port"),n=require("open"),a=require("fs");function c(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var l=c(e),h=c(i),p=c(o),u=c(r),d=c(n);const m="@mate-academy/scripts";var y="1.2.8";function g(t,e=!0,i=process.cwd()){let o={stdio:"ignore"};e&&(o={stdio:"inherit",cwd:i});const r=s.execSync(t,o);return r?r.toString():r}function f(t,s=!0){try{return g(t,s)}catch(t){return process.exit(1)}}const w={shouldBindStdout:!0,cwd:process.cwd()};function D(t,e=w){const{shouldBindStdout:i=!0,cwd:o}=e;return new Promise(((e,r)=>{const n={cwd:o},a=s.exec(t,n);let c="";i&&(a.stdout&&a.stdout.on("data",(t=>{c+=t.toString(),console.log(t)})),a.stderr&&a.stderr.on("data",(t=>{console.error(t)}))),a.on("close",(s=>{s>0?r(new Error(`${t}, errorCode: ${s}`)):e(c)}))}))}function S(t,e=!0,i=process.cwd()){const o={cwd:i},r=s.exec(t,o);return e&&(r.stdout&&r.stdout.on("data",(t=>{console.log(t)})),r.stderr&&r.stderr.on("data",(t=>{console.error(t)}))),r}const j={html:!0,bem:!0,styles:!0,javascript:!0,htmlLint:!1},v={jest:!1,backstop:!1,cypress:!1,cypressComponents:!1};var R;!function(t){t.None="none",t.Layout="layout",t.LayoutDOM="layoutDOM",t.Javascript="javascript",t.Typescript="typescript",t.React="react",t.ReactTypescript="reactTypescript"}(R||(R={}));function b(t){switch(t){case R.Layout:return j;case R.LayoutDOM:case R.Javascript:case R.Typescript:case R.React:case R.ReactTypescript:return{...j,bem:!1};default:case R.None:return j}}function L(t){switch(t){case R.Layout:return{...v,jest:!0,backstop:!0};case R.LayoutDOM:return{...v,cypress:!0};case R.Javascript:case R.Typescript:return{...v,jest:!0};case R.React:case R.ReactTypescript:return{...v,cypress:!0};default:case R.None:return v}}function T(){var t;let s=process.cwd(),e=h.default.readdirSync(s);try{for(;!k(e)||!$(s);){if(P(s))throw new Error("Command should be run inside project folder with @mate-academy/scripts as devDependency");s=l.default.join(s,"../"),e=h.default.readdirSync(s)}}catch(e){console.error(null===(t=e)||void 0===t?void 0:t.message),s=process.cwd()}return s}function k(t){return t.includes("package.json")}function $(t){if("test"===process.env.NODE_ENV)return!0;let s;try{const e=h.default.readFileSync(l.default.join(t,"package.json"),{encoding:"utf-8"});s=JSON.parse(e)}catch(t){s=null}return s&&s.devDependencies&&s.devDependencies["@mate-academy/scripts"]}function P(t){return"/"===t}function E(t){const{mateAcademy:s}=JSON.parse(h.default.readFileSync(l.default.join(t,"package.json"),{encoding:"utf-8"})),e=s||{},i=e.linters||{},o=e.tests||{},r=((t=R.None)=>({projectType:t,linters:{...b(t)},tests:{...L(t)}}))(e.projectType);return{...r,...e,linters:{...r.linters,...i},tests:{...r.tests,...o}}}function O(t,s=""){const e=l.default.join(t,s);return h.default.readdirSync(e).flatMap((t=>{const i=l.default.join(e,t),o=h.default.lstatSync(i),r=l.default.join(s,t);return o.isDirectory()?O(i,r):r}))}function C(t){return Object.entries(t).filter((([,t])=>"boolean"!=typeof t||t)).reduce(((t,[s,e])=>`${t} --${s}${"boolean"==typeof e?"":` ${e}`}`),"")}class I{constructor(t){this.versionString=t,this.validate();const[s,e,i]=this.getParts();this.major=s,this.minor=e,this.patch=i}static fromVersionString(t){return new I(t)}static fromVersionList(t){const s=this.getVersionStringFromVersionList(t);return new I(s)}isHigher(t){return!t||(this.major>t.major||!(this.major<t.major)&&(this.minor>t.minor||!(this.minor<t.minor)&&(this.patch>t.patch||(this.patch,t.patch,!1))))}static getVersionStringFromVersionList(t){return(s=t.split("@"))[s.length-1];var s}validate(){const t=this.versionString.split(".");3!==t.length&&I.throwSemverError();t.every((t=>!Number.isNaN(Number(t))))||I.throwSemverError()}getParts(){return this.versionString.split(".").map(Number)}static throwSemverError(){throw new Error("Semver should contain 3 numbers divided with point(.)")}}async function N(t,s){return new Promise(((e,i)=>{p.default(t,s,(t=>{t?i(t):e()}))}))}const x=()=>{};var V,H,M,G,B,_,A;class J{constructor(t){this.logNoImplementationWarning=()=>{console.warn(`No implementation for command ${this.constructor.name} for ${this.config.projectType} project`)},this[V]=this.logNoImplementationWarning,this[H]=this.logNoImplementationWarning,this[M]=this.logNoImplementationWarning,this[G]=this.logNoImplementationWarning,this[B]=this.logNoImplementationWarning,this[_]=this.logNoImplementationWarning,this[A]=this.logNoImplementationWarning,this.rootDir=t,this.binDir=l.default.join(t,"node_modules/.bin/"),this.config=E(t)}async run(t){this.checkProjectType();try{await this.common(t),await this[this.config.projectType](t)}catch(t){process.exit(1)}}checkProjectType(){this.config.projectType===R.None&&J.logProjectTypeWarning()}static logProjectTypeWarning(){console.warn('package.json should contain\n{\n  ...\n  "mateAcademy": {\n    "projectType": "layout" | "javascript" | "react" | "reactTypescript" | "typescript" | "layoutDOM"\n  }\n}\n')}child(t){return new t(this.rootDir)}}V=R.None,H=R.Layout,M=R.LayoutDOM,G=R.Javascript,B=R.Typescript,_=R.React,A=R.ReactTypescript;class W{constructor(t){return this.rootDir=t,this.configPath=l.default.join(this.rootDir,"./backstopConfig.js"),this.dataDir=l.default.join(this.rootDir,"backstop_data"),this.referencesDir=l.default.join(this.dataDir,"bitmaps_reference"),this.testResultsDir=l.default.join(this.dataDir,"bitmaps_test"),this.binDir=l.default.join(this.rootDir,"node_modules/.bin/"),this.reportDir=this.dataDir,W.instance||(W.instance=this),W.instance}test(t=8080){h.default.existsSync(this.configPath)&&(this.ensureReferences(),this.cleanTestResults(),this.run("test",{config:this.configPath,port:t}))}ensureReferences(){this.areReferencesExists()||this.loadReferences()}areReferencesExists(){return h.default.existsSync(this.referencesDir)}cleanTestResults(){h.default.removeSync(this.testResultsDir)}loadReferences(){h.default.existsSync(this.configPath)&&(this.cleanReference(),this.run("reference",{config:this.configPath}))}cleanReference(){h.default.removeSync(this.referencesDir)}run(t,{port:s,...e}){const i=C(e);g(`cross-env PORT=${s} ${this.binDir}backstop ${t} ${i}`)}}class F{constructor(t){this.rootDir=t,this.baseOptions={"out-dir":l.default.join(this.rootDir,"dist")},this.source=l.default.join(this.rootDir,"src/index.html")}serve(t,s){const{showLogs:e,open:i,port:o}=t,r={...this.baseOptions,open:i,port:o||8080};return this.run("serve",r,"development",e,s)}build(t=!1){const s={...this.baseOptions,"public-url":"./"};return this.run("build",s,"production",t)}run(t,s,e="development",i=!1,o){const r=C(s),n=`cross-env NODE_ENV=${e} npx parcel ${t} ${F.escapePathSpaces(this.source)} ${r}`;i&&console.log(n);return(o?S:g)(n,i)}static escapePathSpaces(t){return t.replace(" ","\\ ")}}class U{constructor(){this.binDir=l.default.join(T(),"node_modules/.bin/")}once(){return g(`${this.binDir}jest ./ --passWithNoTests`)}watch(){return g(`${this.binDir}jest ./ --watch`)}}const q={envs:{local:!0,global:!1},silent:!1},K={isGlobal:!1,versionString:"",silent:!1};class Y{constructor(t){this.packageName=t}async ensure({envs:t=q.envs,silent:s=q.silent}=q){const e=await this.getVersions();t.local&&!e.local&&await this.install({silent:s}),t.global&&!e.global&&await this.install({silent:s,isGlobal:!0})}async update({envs:t=q.envs,silent:s=q.silent}=q){const e=await this.getVersions();t.local&&e.available.isHigher(e.local)&&await this.install({silent:s}),t.global&&e.available.isHigher(e.global)&&await this.install({silent:s,isGlobal:!0})}async install({isGlobal:t=K.isGlobal,versionString:s=K.versionString,silent:e=K.silent}=K){let i=s;if(!i){i=(await this.getVersions()).available.versionString}if(!e){const s=await this.getVersions(),e=s[t?"global":"local"];console.log(`Update ${t?"global":"local"} ${this.packageName} from ${(null==e?void 0:e.versionString)||'"none"'} to ${s.available.versionString}`)}await D(`npm i ${t?"-g":""} ${this.packageName}@${i}`,{shouldBindStdout:!1})}async getVersions(){return this.privateVersions||await this.setVersions(),this.privateVersions}async setVersions(){const[t,s,e]=await Promise.all([this.getAvailableVersion(),this.getGlobalVersion(),this.getLocalVersion()]);this.privateVersions={available:t,global:s,local:e}}async getAvailableVersion(){const t=await D(`npm view ${this.packageName} version`);return I.fromVersionString(t)}async getGlobalVersion(){return this.getInstalledVersion(!0)}async getLocalVersion(){return this.getInstalledVersion()}async getInstalledVersion(t=!1,s=0){try{const e=await D(`npm ls ${t?"-g":""} --deps=${s} ${this.packageName} version`);return I.fromVersionList(e)}catch(t){return null}}}class z{constructor(t){this.rootDir=t,this.binDir=l.default.join(this.rootDir,"node_modules/.bin/")}start(t={},s=!1){const{port:e,open:i=!0,showLogs:o=!1}=t;return(s?S:g)(`cross-env ${e?`PORT=${e} `:""}${i?"":"BROWSER=none "}${this.binDir}react-scripts start`,o)}build(t,s=!0){const e=`cross-env ${t?`BUILD_PATH=./${t} `:""}${this.binDir}react-scripts build`;return s&&console.log(`Execute command: ${e}`),g(e)}}class Q extends J{constructor(t){super(t),this.gitHooksDestinationDir=l.default.join(this.rootDir,"./.git/hooks"),this.layout=async()=>{this.copyGitIgnore(R.Layout),this.copyProjectTypeSpecificConfigs(R.Layout),this.initGitHooks(R.Layout),await this.ensureCrossEnvInstalled()},this.layoutDOM=async()=>{this.copyGitIgnore(R.LayoutDOM),this.copyProjectTypeSpecificConfigs(R.LayoutDOM),this.initGitHooks(R.LayoutDOM),await this.ensureCrossEnvInstalled()},this.javascript=()=>{this.copyGitIgnore(R.Javascript),this.copyProjectTypeSpecificConfigs(R.Javascript),this.initGitHooks(R.Javascript)},this.react=()=>{this.copyGitIgnore(R.React),this.copyProjectTypeSpecificConfigs(R.React),this.copyProjectTypeSpecificTemplates(R.React),this.initGitHooks(R.React)},this.reactTypescript=()=>{this.copyGitIgnore(R.ReactTypescript),this.copyProjectTypeSpecificConfigs(R.ReactTypescript),this.copyProjectTypeSpecificTemplates(R.ReactTypescript),this.initGitHooks(R.ReactTypescript)},this.crossEnvPackageService=new Y("cross-env")}common(){this.copyCommonConfigs()}copyCommonConfigs(){const t=l.default.join(Q.configsDir,"common");h.default.copySync(t,this.rootDir)}copyGitIgnore(t){const s=".gitignore";h.default.copySync(l.default.join(Q.configsDir,"gitignoreTemplates",`.gitignore.${t}`),l.default.join(this.rootDir,s)),console.log(".gitignore copied")}copyProjectTypeSpecificConfigs(t){const s=l.default.join(Q.configsDir,t);h.default.copySync(s,this.rootDir),console.log(`${t} specific configs copied`)}copyProjectTypeSpecificTemplates(t){const s=l.default.join(Q.templatesDir,t);O(s).filter((t=>t.endsWith(".template"))).forEach((t=>{const e=t.replace(/\.template$/,""),i=l.default.join(s,t),o=l.default.join(this.rootDir,e);h.default.mkdirpSync(l.default.dirname(o)),h.default.copyFileSync(i,o)})),console.log(`${t} specific templates copied`)}initGitHooks(t){const s=l.default.join(Q.gitHooksSourceDir,t);h.default.readdirSync(s).forEach((t=>this.initGitHook(s,t))),console.log("Git hooks installed")}initGitHook(t,s){const e=l.default.join(t,s),i=l.default.join(this.gitHooksDestinationDir,s);h.default.copySync(e,i),console.log(`Git ${s} hook installed`)}async ensureCrossEnvInstalled(){await this.crossEnvPackageService.ensure({silent:!1}),console.log("Cross-env installed")}}Q.configsDir=l.default.join(__dirname,"../configs"),Q.gitHooksSourceDir=l.default.join(Q.configsDir,"git-hooks"),Q.templatesDir=l.default.join(Q.configsDir,"templates");class X extends J{constructor(){super(...arguments),this.parcel=new F(this.rootDir),this.jest=new U,this.reactScripts=new z(this.rootDir),this.layout=(t,s)=>this.parcel.serve({showLogs:t.shouldShowInternalLogs,open:t.open,port:t.port},s),this.layoutDOM=t=>{this.layout(t)},this.react=(t,s)=>this.reactScripts.start({showLogs:t.shouldShowInternalLogs,open:t.open,port:t.port},s),this.reactTypescript=(t,s)=>this.react(t,s),this.javascript=()=>{this.jest.watch()}}common(){}}class Z{constructor(t){this.rootDir=t,this.shouldOpen=!0,this.shouldShowLogs=!1,this.shouldRunE2E=!0,this.shouldRunComponents=!1,this.reportsDir=l.default.join(this.rootDir,"reports"),this.rawReportsDir=l.default.join(this.rootDir,"raw_reports"),this.mergedReport=l.default.join(this.reportsDir,"report.json"),this.binDir=l.default.join(this.rootDir,"node_modules/.bin/")}async run(t){this.processOptions(t),this.log("CYPRESS RUN CALLED",t),await this.cleanPrevReports(),this.log("OLD REPORTS REMOVED");let s=!1;try{this.log("RUN CYPRESS"),await this.runCypress(),this.log("CYPRESS TESTS RUN SUCCESS")}catch(t){this.log("CYPRESS TESTS RUN FAIL",t),s=!0}finally{const t=await this.prepareReports();this.log("TEST REPORTS PREPARED",t),t&&this.shouldOpen?(this.log("OPEN REPORTS IN BROWSER"),await this.openReportInBrowser()):this.log("SKIP OPEN REPORTS IN BROWSER ACCORDING"),s&&process.exit(1)}}processOptions(t={}){const{showLogs:s=!1,open:e=!0,e2e:i=!0,components:o=!1,startServer:r}=t;this.shouldOpen=e,this.shouldShowLogs=s,this.shouldRunE2E=i,this.shouldRunComponents=o,this.startServer=r}async cleanPrevReports(){await Promise.all([this.cleanReports(),this.cleanRawReports()])}async cleanReports(){await h.default.remove(this.reportsDir)}async cleanRawReports(){await h.default.remove(this.rawReportsDir)}async runCypress(){const t=[];if(this.shouldRunE2E){let s;this.startServer&&(s=await this.startServer());try{const t=s?` --config baseUrl=http://localhost:${s.port}`:"";await D(`${this.binDir}cypress run${t}`,{shouldBindStdout:this.shouldShowLogs})}catch(s){t.push(s)}finally{s&&s.stop()}}if(this.shouldRunComponents)try{await D(`${this.binDir}cypress run-ct`,{shouldBindStdout:this.shouldShowLogs})}catch(s){t.push(s)}if(t.length)throw t}async prepareReports(){return await this.hasRawReports()?(await this.makeReportsDir(),await this.mergeReports(),await this.generateHtmlReport(),await this.cleanRawReports(),!0):(this.log("REPORTS WAS NOT CREATED DURING TEST RUN. SKIP REPORTS PREPARING"),await this.cleanRawReports(),!1)}async hasRawReports(){if(!await h.default.pathExists(this.rawReportsDir))return!1;return(await h.default.readdir(this.rawReportsDir)).length>0}async makeReportsDir(){await h.default.mkdir(this.reportsDir)}async mergeReports(){const t=l.default.join(this.rawReportsDir,"*.json");await D(`${this.binDir}mochawesome-merge "${t}" > ${this.mergedReport}`,{shouldBindStdout:this.shouldShowLogs})}async generateHtmlReport(){await D(`${this.binDir}marge -o ${this.reportsDir} ${this.mergedReport}`,{shouldBindStdout:this.shouldShowLogs})}async openReportInBrowser(){await d.default(`file://${l.default.join(this.reportsDir,"report.html")}`)}log(t,s){this.shouldShowLogs&&(s?console.log(t,s):console.log(t))}}class tt extends J{constructor(){super(...arguments),this.backstop=new W(this.rootDir),this.jest=new U,this.cypress=new Z(this.rootDir),this.startCommand=this.child(X),this.layout=async({showLogs:t})=>{const s=await tt.getPort(),e=this.startCommand.layout({shouldShowInternalLogs:t,open:!1,port:s},!0);if(!e.stdout)throw await N(e.pid),new Error("Unexpected error: child stdout is null");let i=!1;e.stdout.on("data",(async t=>{if(!i&&t.toString().includes("Server running")){i=!0;try{this.backstop.test(s),this.jest.once(),await N(e.pid),process.exit(0)}catch{await N(e.pid),process.exit(1)}}}))},this.layoutDOM=async t=>{await this.cypress.run(t)},this.react=async t=>{this.showLogs=t.showLogs;const{cypress:s,cypressComponents:e}=this.config.tests,i=async()=>{const s=await tt.getPort(),e=this.startCommand.react({shouldShowInternalLogs:t.showLogs,open:!1,port:s},!0);let i=!1;const o=new Promise(((t,o)=>{if(!e.stdout)return void N(e.pid).then((()=>{this.log("CHILD PROCESS KILLED: No stdout")})).catch((t=>{throw this.log("CHILD PROCESS NOT KILLED: No stdout"),t})).finally((()=>{o(new Error("Unexpected error: child stdout is null"))}));const r=o=>{var n;i||!o.toString().includes(`http://localhost:${s}`)&&!o.toString().includes("Compiled with warnings")||(i=!0,null===(n=e.stdout)||void 0===n||n.off("data",r),t())};e.stdout.on("data",r)})),r=new Promise(((t,s)=>{setTimeout((async()=>{if(i)t();else{try{await N(e.pid),this.log("CHILD PROCESS KILLED: Timeout")}catch(t){this.log("CHILD PROCESS NOT KILLED: Timeout")}s(new Error("Server not started after 30 seconds"))}}),3e4)}));return await Promise.race([o,r]),{port:s,stop:async()=>{try{await N(e.pid),this.log("CHILD PROCESS KILLED: Stop")}catch(t){this.log("CHILD PROCESS NOT KILLED: Stop")}}}};(s||e)&&await this.cypress.run({...t,e2e:s,components:e,startServer:i})},this.reactTypescript=async t=>{await this.react(t)},this.javascript=()=>{this.jest.once()},this.typescript=()=>{this.jest.once()}}common(){}static getPort(){return u.default({port:u.default.makeRange(3001,3999)})}log(...t){this.showLogs&&console.log(...t)}}class st extends J{constructor(){super(...arguments),this.parcel=new F(this.rootDir),this.reactScripts=new z(this.rootDir),this.layout=t=>{h.default.removeSync(l.default.join(this.rootDir,"dist")),this.parcel.build(t.shouldShowInternalLogs)},this.layoutDOM=t=>{this.layout(t)},this.react=t=>{t.shouldShowInternalLogs&&console.log("START react-scripts build"),this.reactScripts.build("dist",t.shouldShowInternalLogs)},this.reactTypescript=t=>{this.react(t)}}common(){}}class et{constructor(t){this.rootDir=t,this.binDir=l.default.join(this.rootDir,"node_modules/.bin/")}deploy(t="build"){g(`${this.binDir}gh-pages -d ${t}`)}}class it extends J{constructor(){super(...arguments),this.layout=async()=>{await D("npm i -D @mate-academy/scripts");const t=await this.getPackage();t.scripts=it.scripts.layout,delete t["lint-staged"],delete t.husky,await a.promises.writeFile(l.default.join(this.rootDir,"package.json"),JSON.stringify({...t,...it.mateConfig.layout},null,2)),await Promise.all([it.safeRun(h.default.copy(l.default.join(this.rootDir,"config/backstop/backstopConfig.js"),l.default.join(this.rootDir,"backstopConfig.js"))),it.safeRun(h.default.remove(l.default.join(this.rootDir,"config"))),it.safeRun(h.default.remove(l.default.join(this.rootDir,"server.js"))),it.safeRun(h.default.remove(l.default.join(this.rootDir,".travis.yml"))),it.safeRun(h.default.remove(l.default.join(this.rootDir,"gulpfile.js"))),it.safeRun(h.default.remove(l.default.join(this.rootDir,".linthtmlrc")))]),await D("npm rm @linthtml/gulp-linthtml gulp-autoprefixer gulp-clean gulp-eslint gulp-replace-path gulp-sass gulp-sourcemaps gulp-stylelint gulp @mate-academy/browsersync-config htmllint htmllint-cli husky lint-staged rimraf @mate-academy/htmllint-config"),await D("npm i -D @linthtml/linthtml stylelint-scss @mate-academy/linthtml-config node-sass parcel"),await D("npm i")},this.layoutDOM=async()=>{const t=await this.getPackage();await a.promises.writeFile(l.default.join(this.rootDir,"package.json"),JSON.stringify({...t,...it.mateConfig.layoutDOM},null,2)),await D("npm rm backstopjs @mate-academy/backstop-config gulp-htmllint"),await D(`rm -rf ${l.default.join(this.rootDir,"backstopConfig.js")}`),await D("npm i -D cypress eslint-plugin-cypress mochawesome mochawesome-merge mochawesome-report-generator"),await D(`mkdir ${l.default.join(this.rootDir,"cypress")}`),await D(`mkdir ${l.default.join(this.rootDir,"cypress","integration")}`),await D(`cp ${l.default.join(__dirname,"../","configs","custom",R.LayoutDOM,"page.spec.js")} ${l.default.join(this.rootDir,"cypress","integration","page.spec.js")}`),await D("npm i")},this.javascript=async()=>{await D("npm i -D @mate-academy/scripts");const t=await this.getPackage();t.scripts=it.scripts.javascript,delete t["lint-staged"],delete t.husky,await a.promises.writeFile(l.default.join(this.rootDir,"package.json"),JSON.stringify({...t,...it.mateConfig.javascript},null,2)),await it.safeRun(h.default.remove(l.default.join(this.rootDir,".travis.yml"))),await D("npm rm husky lint-staged"),await D("npm i"),await D(`${this.binDir}eslint ./ --fix`)},this.react=x,this.reactTypescript=x}async common(t){await this[t.projectType]()}async getPackage(){const t=await h.default.readFile(l.default.join(this.rootDir,"package.json"),{encoding:"utf-8"});return JSON.parse(t)}static async safeRun(t){try{await t}catch(t){console.error("Migration error",t)}return!0}}it.scripts={layout:{init:"mate-scripts init",start:"mate-scripts start",lint:"mate-scripts lint","test:only":"mate-scripts test",build:"mate-scripts build",deploy:"mate-scripts deploy",update:"mate-scripts update",postinstall:"npm run update",test:"npm run lint && npm run test:only"},javascript:{init:"mate-scripts init",start:"mate-scripts start",lint:"mate-scripts lint","test:only":"mate-scripts test",update:"mate-scripts update",postinstall:"npm run update",test:"npm run lint && npm run test:only"}},it.mateConfig={[R.None]:null,[R.Layout]:{mateAcademy:{projectType:R.Layout}},[R.LayoutDOM]:{mateAcademy:{projectType:R.LayoutDOM}},[R.Javascript]:{mateAcademy:{projectType:R.Javascript}},[R.React]:{mateAcademy:{projectType:R.React}},[R.ReactTypescript]:{mateAcademy:{projectType:R.ReactTypescript}},[R.Typescript]:{mateAcademy:{projectType:R.Typescript}}};const ot=new t.Command,rt=new class{constructor(){this.rootDir=T()}make(t,s,e=!1){const i=new t(e?process.cwd():this.rootDir);return s?(...t)=>{const e=t.pop(),o=s(e,...t);return i.run(o)}:()=>i.run()}};ot.name("mate-scripts").version(y,"-v --version","output current version"),ot.command("init").description("init linters and configs").action(rt.make(Q)),ot.command("start").option("-l, --logs","show internal commands logs",!1).option("-o, --open","open web browser after start",!0).option("-p, --port <number>","choose port").description("run development server").action(rt.make(X,(t=>{const{logs:s,open:e,port:i}=t;return{shouldShowInternalLogs:s,open:e,port:i}}))),ot.command("lint [files...]").option("-s, --styles","lint styles only",!1).option("-h, --html","lint html (markup-style) only",!1).option("-m, --mate-htmllint","Mate HTML linter: lint html (markup-style) only",!1).option("-b, --bem","lint html (BEM) only",!1).option("-j, --javascript","lint javascript only",!1).description("lint html, css and js files").action(rt.make(class extends J{constructor(){super(...arguments),this.layout=t=>{const{html:s,bem:e,files:i,styles:o,javascript:r,htmlLint:n}=t,{linters:a}=this.config;s&&a.html&&this.lintHtml(i),n&&a.htmlLint&&this.mateLintHtml(i),e&&a.bem&&this.lintBem(i),o&&a.styles&&this.lintStyles(i),r&&a.javascript&&this.lintJs(i)},this.layoutDOM=t=>{this.layout(t)},this.javascript=t=>{const{javascript:s,files:e}=t;s&&this.lintJs(e)},this.react=t=>{const{javascript:s,styles:e,files:i}=t;e&&this.lintStyles(i),s&&this.lintJs(i)},this.reactTypescript=t=>{this.react(t)}}common(){}mateLintHtml(t){const s=t?t.join(" "):"./src/";f(`${this.binDir}html-lint ${s}`)}lintHtml(t){const s=t?t.join(" "):"src/**/*.html";f(`${this.binDir}linthtml ${s}`)}lintBem(t){const s=t?t.join(" "):"./src";f(`${this.binDir}bemlint ${s}`)}lintStyles(t){const s=t?t.join(" "):"./src/**/*.css ./src/**/*.scss";f(`${this.binDir}stylelint ${s}`)}lintJs(t){const s=t?t.join(" "):"./src";f(`${this.binDir}eslint --ext .ts,.tsx,.js,.jsx ${s} --fix`)}},((t,s)=>{const{styles:e,html:i,bem:o,javascript:r,htmlLint:n}=t,a=s&&s.length?s:null;return e||i||r||o||n?{styles:e,html:i,bem:o,javascript:r,files:a,htmlLint:n}:{styles:!0,html:!0,bem:!0,javascript:!0,htmlLint:!0,files:a}}))),ot.command("test").option("-n, --not-open","should open test report in browser",!1).option("-l, --logs","should log details to console during run",!1).description("run tests").action(rt.make(tt,(t=>{const{"not-open":s,logs:e}=t;return{open:!s,showLogs:e}}))),ot.command("build").description("create production ready build").option("-l, --logs","show internal commands logs",!1).action(rt.make(st,(t=>{const{logs:s}=t;return{shouldShowInternalLogs:s}}))),ot.command("deploy").option("-l, --logs","show internal commands logs",!1).description("deploy application to gh-pages").action(rt.make(class extends J{constructor(){super(...arguments),this.ghPages=new et(this.rootDir),this.buildCommand=this.child(st),this.destinationDir=l.default.join(this.rootDir,"dist"),this.packageDir=l.default.join(this.rootDir,"node_modules","@mate-academy","scripts"),this.deployScriptFile=l.default.join(this.packageDir,"bash-scripts","deploy-layout.sh"),this.backstop=new W(this.rootDir),this.layout=async t=>{var s;await this.setShellRunner();const{shouldShowInternalLogs:e}=t;await this.buildCommand.run({shouldShowInternalLogs:e}),console.log("Start deploy to gh-pages. Please wait, it may take up to minute.\n");try{this.copyHtmlReport(),this.commitBuild(e),this.runDeployBashScript(e),console.log("[32mSuccessfully deployed to gh-pages!\n[0m")}catch(t){console.error("[31mDeploy error: ",null===(s=t)||void 0===s?void 0:s.message,"[0m")}},this.layoutDOM=async t=>{var s;await this.setShellRunner();const{shouldShowInternalLogs:e}=t;await this.buildCommand.run({shouldShowInternalLogs:e}),console.log("Start deploy to gh-pages. Please wait, it may take up to minute.\n");try{this.runDeployBashScript(e),console.log("[32mSuccessfully deployed to gh-pages!\n[0m")}catch(t){console.error("[31mDeploy error: ",null===(s=t)||void 0===s?void 0:s.message,"[0m")}},this.react=()=>{this.ghPages.deploy("dist")},this.reactTypescript=()=>{this.react()}}common(){}async setShellRunner(){try{await D("sh --version",{shouldBindStdout:!1}),this.shellRunner="sh"}catch(t){try{await D("bash --version",{shouldBindStdout:!1}),this.shellRunner="bash"}catch(t){try{await D("zsh --version",{shouldBindStdout:!1}),this.shellRunner="zsh"}catch(t){console.error('[31mDeploy skipped\nPlease run deploy in "Git bash" terminal',"[0m"),process.exit(0)}}}}copyHtmlReport(){try{h.default.copySync(l.default.join(this.backstop.reportDir),l.default.join(this.destinationDir,"./report"))}catch(t){console.error("[33mWarning: No html_report[0m")}}commitBuild(t){g(`git add ${this.destinationDir} -f`,t),g('git commit -m "make build" --no-verify',t)}runDeployBashScript(t){g(`${this.shellRunner} ${this.deployScriptFile} dist`,t,this.rootDir)}},(t=>{const{logs:s}=t;return{shouldShowInternalLogs:s}}))),ot.command("update").description("update @mate-academy/scripts").action(rt.make(class extends J{constructor(t){super(t),this.layout=x,this.layoutDOM=x,this.javascript=x,this.react=x,this.reactTypescript=x,this.mateScriptsPackageService=new Y(m)}async common(){await this.updateMateScriptsVersions(),console.log("versions updated successfully"),g(`${this.binDir}mate-scripts init`),console.log("init command success")}async updateMateScriptsVersions(){await this.mateScriptsPackageService.update({envs:{global:!0,local:!0}})}})),ot.command("migrate <type>").description("(global) migrate project to @mate-academy/scripts").action(rt.make(it,((t,s)=>({projectType:s})),!0)),ot.parse(process.argv);
